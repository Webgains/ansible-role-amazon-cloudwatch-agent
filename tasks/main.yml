---
- name: Update user directory
  set_fact:
    aws_cwa_user_path: "/home/{{ aws_cwa_local_user }}"
  when: (aws_cwa_local_user != "root") and 
        (aws_cwa_user_path == "/root") # When not default, assume user has overridden.

- name: Ensure {{ aws_cwa_user_path }}/.aws/ is there
  file:
    path: "{{ aws_cwa_user_path }}/.aws/"
    state: 'directory'
    mode: '0700'
    owner: "{{ aws_cwa_local_user }}"
    group: "{{ aws_cwa_local_user }}"
  when: aws_cwa_on_prem

- name: Remove {{ aws_cwa_user_path }}/.aws/config
  file:
    path: "{{ aws_cwa_user_path }}/.aws/config"
    state: 'absent'
  notify: restart amazon-cloudwatch-agent
  when: not aws_cwa_on_prem

- name: Remove {{ aws_cwa_user_path }}/.aws/credentials
  file:
    path: "{{ aws_cwa_user_path }}/.aws/credentials"
    state: 'absent'
  notify: restart amazon-cloudwatch-agent
  when: not aws_cwa_on_prem

- name: Add AWS CWA profile to {{ aws_cwa_user_path }}/.aws/config
  blockinfile:
    path: "{{ aws_cwa_user_path }}/.aws/config"
    create: 'yes'
    owner: "{{ aws_cwa_local_user }}"
    group: "{{ aws_cwa_local_user }}"
    mode: 0600
    marker: "# {mark} ansible aws-cwa cfg"
    block: |
      [profile AmazonCloudWatchAgent]
      output = json
      region = {{aws_cwa_region|default('us-east-1')}}
  notify: restart amazon-cloudwatch-agent
  when: aws_cwa_on_prem

- name: Add AWS CWA profile to {{ aws_cwa_user_path }}/.aws/credentials
  blockinfile:
    path: "{{ aws_cwa_user_path }}/.aws/credentials"
    create: 'yes'
    owner: "{{ aws_cwa_local_user }}"
    group: "{{ aws_cwa_local_user }}"
    mode: 0600
    marker: "# {mark} ansible aws-cwa cfg"
    block: |
      [AmazonCloudWatchAgent]
      aws_access_key_id={{aws_cwa_key_access}}
      aws_secret_access_key={{aws_cwa_key_secret}}
  notify: restart amazon-cloudwatch-agent
  no_log: True
  when: aws_cwa_on_prem

- name: Install pre-requisits
  package:
    name: unzip
    state: present

- name: Already installed?
  package:
    name: amazon-cloudwatch-agent
    state: present
  ignore_errors: yes
  register: already_inst

- block:
  - block:
    - name: purge existing pkg if installed
      package:
        name: amazon-cloudwatch-agent
        state: absent
    - name: purge dir tree if exists
      file:
        path: '/opt/aws/amazon-cloudwatch-agent'
        state: absent
    when: (already_inst is success)
  - name: make temp dir for installation files
    file:
      path: "/tmp/aws-cwa-inst"
      state: "directory"
  - name: download & unpack the latest cloudwatch agent .zip
    unarchive:
      remote_src: "yes"
      src: "{{ aws_cwa_url }}"
      dest: "/tmp/aws-cwa-inst/"
  - name: run the installer
    shell: cd /tmp/aws-cwa-inst && echo 'N' | ./install.sh
    notify: restart amazon-cloudwatch-agent
  - name: remove temp dir
    file:
      path: "/tmp/aws-cwa-inst/"
      state: "absent"
  when: (already_inst is failed) or (aws_install_latest is defined)      

- name: compile and copy over amazon-cloudwatch-agent.json
  template:
    src: "{{ aws_cwa_cfgs }}"
    dest: "/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json"
    mode: 0644
  notify: restart amazon-cloudwatch-agent

- name: compile and copy over amazon-cloudwatch-agent.json
  template:
    src: "{{ aws_cwa_config }}"
    dest: "/opt/aws/amazon-cloudwatch-agent/etc/common-config.toml"
    mode: 0644
  notify: restart amazon-cloudwatch-agent

- name: Setup log groups
  include_tasks: log_groups.yml
  with_items: "{{ aws_cwa_logfiles | default([]) }}"
  loop_control:
    label: "{{ item.log_group_name }}"

- name: Enable service on boot
  service:
    name: "amazon-cloudwatch-agent"
    enabled: "yes"

- name: Add log rotation for amazon-cloudwatch-agent.log
  copy:
    dest: '/etc/logrotate.d/aws-cwa'
    owner: "{{ aws_cwa_local_user }}"
    group: "{{ aws_cwa_local_user }}"
    content: |
        /opt/aws/amazon-cloudwatch-agent/logs/amazon-cloudwatch-agent.log {
            size 50M
            rotate 5
            compress
            missingok
            copytruncate
        }
